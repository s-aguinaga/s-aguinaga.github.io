<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Artifical on Sal Aguinaga</title>
    <link>http://s-aguinaga.github.io/tags/artifical/index.xml</link>
    <description>Recent content in Artifical on Sal Aguinaga</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://s-aguinaga.github.io/tags/artifical/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>learning and working with deep nn</title>
      <link>http://s-aguinaga.github.io/post/learning-and-working-with-deep-nn/</link>
      <pubDate>Sun, 13 Nov 2016 06:53:43 -0500</pubDate>
      
      <guid>http://s-aguinaga.github.io/post/learning-and-working-with-deep-nn/</guid>
      <description>&lt;p&gt;Deep learning: A brief walk into the foundations underliing neural networks and deep learning.&lt;/p&gt;

&lt;p&gt;
&lt;!--.----1----.----2----.----3----.----4----.----5----.----6----.----7----.----8 --&gt;&lt;/p&gt;

&lt;h1 id=&#34;neural-networks&#34;&gt;Neural Networks&lt;/h1&gt;

&lt;p&gt;Represenation learning is a set of methods that allows an algorithm automatically
find the represenations needed for detection or classification.&lt;/p&gt;

&lt;h2 id=&#34;historical-notes&#34;&gt;Historical Notes&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Convolutional Networks
These network architectures came from a power model architecture introduced by the neocognitron (Fukushima, 1980) for processing images and insprired by the strcuture of the mammalian visual system see LeCun et al. (1998).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Rectified linear unit&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Models of symbolic reasoning&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Connectionism and concepts of distributed representation&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Back-propagtion is an algorithm that dominates the way we train deep models&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Sequence modeling tasks
An example is natural language processing tasks (used in Google technology)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Kernerl Machines&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Graphical models&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Deep belief neural network (Hinton 2006)&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;machine-learning&#34;&gt;Machine Learning&lt;/h2&gt;

&lt;p&gt;In machine learning we start out with a concrete problem or challenge. This problem is usually coupled to a dataset. You have arrived to a new level of computing when you are tackling problems at scale and in the core realm of BigData. In other words, now you have to be in tune with your computing resources (e.g, one needs to understand what CPUs and what GPUs are on target computing system).&lt;/p&gt;

&lt;p&gt;Types of learning
- Represenation learning
- Deep learning
- Supervised, unsupervised, and semi-supervised learning&lt;/p&gt;

&lt;p&gt;Before we look at the various methods avilable in machine learning for solving problems,
let&amp;rsquo;s start by considering data and the questions around that data motivating our interest.&lt;/p&gt;

&lt;h2 id=&#34;the-data&#34;&gt;The Data&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Training data&lt;/li&gt;
&lt;li&gt;Unseen data (or test data)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;supervised-learning&#34;&gt;Supervised learning&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Support Vector Machine
This algorithm can handle and infinte number of features (or attributes)
SVM is a classification algorithm - the type of question you can ask is
if something belongs  to a particular class. The objective of this algorithm is to fidn the optimal separtating hyperplane. Think in terms of what is the largest margin we can find on each side of the the line for the given training data.&lt;/p&gt;

&lt;p&gt;Is the data linearnly separable, if not, then is do we need nonlinear sepation?&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Links
&lt;a href=&#34;http://www.cs.columbia.edu/~kathy/cs4701/documents/jason_svm_tutorial.pdf&#34;&gt;Kathy at Columbia&lt;/a&gt;
&lt;a href=&#34;https://www.analyticsvidhya.com/blog/2015/10/understaing-support-vector-machine-example-code/&#34;&gt;analyticsvidhya&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Unsupervised learning&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;minibatch-stochastic-gradient-descent-algorithm&#34;&gt;Minibatch stochastic gradient descent algorithm&lt;/h3&gt;

&lt;h3 id=&#34;objective-function&#34;&gt;Objective function&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Sum of differentiable functions (finding its minimums or maximums by iteration.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A differentiable function, from &lt;a href=&#34;https://en.wikipedia.org/wiki/Differentiable_function&#34;&gt;Wikipedia&lt;/a&gt;, In calculus (a branch of mathematics), a differentiable function of one real variable is a function whose derivative exists at each point in its domain.&lt;/p&gt;

&lt;h3 id=&#34;gradient-descent&#34;&gt;Gradient Descent&lt;/h3&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Stochastic gradient descent&lt;/p&gt;

&lt;h2 id=&#34;system-setup&#34;&gt;System Setup&lt;/h2&gt;

&lt;p&gt;Setting up a dev machine.
- Note that on a MacBook Pro (Retina, 13-inch, Early 2015) Theano cannot use the GPU devices.
- On a mid 2010 mac mini with NVIDIA graphics&lt;/p&gt;

&lt;h3 id=&#34;mac-mini-with-nvidia-graphics&#34;&gt;Mac Mini with NVIDIA graphics&lt;/h3&gt;

&lt;p&gt;Getting the code&lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;cuda downloads&lt;/a&gt;
- Specifically getting this image: &lt;a href=&#34;https://developer.nvidia.com/compute/cuda/8.0/Prod/local_installers/cuda_8.0.55_mac-dmg&#34;&gt;CUDA Toolkit dmg&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;working-locally&#34;&gt;Working Locally&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://amaral.northwestern.edu/resources/guides/mounting-remote-folder-os-x-over-ssh&#34;&gt;Mounting remote folder on OS X over SSH&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;TensorFlow working on a Mac OS X(sierra) with Jupyter and Python3&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew install python3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Warning: Building python3 from source:
The bottle needs the Apple Command Line Tools to be installed.
You can install them, if desired, with: &lt;code&gt;xcode-select --install&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://joebergantine.com/blog/2015/apr/30/installing-python-2-and-python-3-alongside-each-ot/&#34;&gt;http://joebergantine.com/blog/2015/apr/30/installing-python-2-and-python-3-alongside-each-ot/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Getting jupyter working with py3 isn&amp;rsquo;t woking so I&amp;rsquo;ve had to research and follow
these instructions:
&lt;a href=&#34;http://ipython.readthedocs.io/en/stable/install/kernel_install.html&#34;&gt;http://ipython.readthedocs.io/en/stable/install/kernel_install.html&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt; # To activate this environment, use:
 # &amp;gt; source activate ipykernel_py3
 #
 # To deactivate this environment, use:
 # &amp;gt; source deactivate ipykernel_py3
 #
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;working-locally-on-mac-os&#34;&gt;Working locally on Mac OS&lt;/h4&gt;

&lt;p&gt;To set it up here is what I had to do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;saguinag@sailntrpy:~$ pip install --upgrade pip
Collecting pip
  Downloading pip-9.0.1-py2.py3-none-any.whl (1.3MB)
    100% |████████████████████████████████| 1.3MB 971kB/s
Installing collected packages: pip
  Found existing installation: pip 9.0.0
    Uninstalling pip-9.0.0:
      Successfully uninstalled pip-9.0.0
Successfully installed pip-9.0.1
saguinag@sailntrpy:~$ sudo -H pip install --upgrade virtualenv
Requirement already up-to-date: virtualenv in /usr/local/lib/python3.5/site-packages
saguinag@sailntrpy:~$ $ virtualenv --system-site-packages ~/tensorflow


~$ which virtualenv
	/usr/local/bin/virtualenv

virtualenv --system-site-packages ~/tensorflow
	Using base prefix &#39;/usr/local/Cellar/python3/3.5.2_3/Frameworks/Python.framework/Versions/3.5&#39;
	New python executable in /Users/saguinag/tensorflow/bin/python3.5
	Not overwriting existing python script /Users/saguinag/tensorflow/bin/python (you must use /Users/saguinag/tensorflow/bin/python3.5)
	Installing setuptools, pip, wheel...done.

source ~/tensorflow/bin/activate
(tensorflow) saguinag@sailntrpy:~$
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;connect-to-dsgx&#34;&gt;Connect to DSGx&lt;/h3&gt;

&lt;p&gt;If it applies, first connect via VPN. Using the following
command mount DSGx locally (on Mac OS X):
  &lt;code&gt;sshfs -o IdentityFile=~/.ssh/id_rsa username@dsg2.crc.nd.edu:/home/username/ /local/Vol/working_dir/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But this doesn&amp;rsquo;t work with virtualenv, so login via ssh to dsgx (!! this might not be entirely true.)&lt;/p&gt;

&lt;p&gt;To umount do:
    &lt;code&gt;umount -f DIR/&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.python-guide.org/en/latest/dev/virtualenvs/&#34;&gt;To work with virtualenv &lt;code&gt;ssh dsgx&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;virtualenv -p /usr/bin/python2.7 venv/&lt;/code&gt;
&lt;code&gt;source venv/bin/activate&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;with-dsg2-and-tensorflow-using-virtualenv&#34;&gt;With DSG2 and Tensorflow using virtualenv&lt;/h4&gt;

&lt;p&gt;Got it to work on DSG2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  513  virtualenv --system-site-packages ~/tensorflow
  514  source ~/tensorflow/bin/activate
  515  export TF_BINARY_URL=https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.11.0rc2-cp27-none-linux_x86_64.whl
  516  pip install --upgrade $TF_BINARY_URL
  517  python
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;tensorflow&#34;&gt;TensorFlow&lt;/h2&gt;

&lt;p&gt;Links to &lt;a href=&#34;https://www.tensorflow.org/versions/r0.11/tutorials/index.html&#34;&gt;tensorflow tutorials&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ToDo: Need to install it locally for now&lt;/p&gt;

&lt;p&gt;The working directory is &lt;code&gt;/Volumes/theory/entropy/DeepLerning&lt;/code&gt;. Go into this directory
and launch Jupyter using the following command, &lt;code&gt;jupyter notebook&amp;amp;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;basic-test&#34;&gt;Basic Test&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow&#34;&gt;TensorFlow Site&lt;/a&gt; Done&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#test-the-tensorflow-installation&#34;&gt;Run a TensorFlow demo model&lt;/a&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;theano&#34;&gt;Theano&lt;/h2&gt;

&lt;p&gt;On your favorite Search Engine type &lt;code&gt;download install theano&lt;/code&gt; and you will end up this site: the docs for Theano 0.8 can be found &lt;a href=&#34;http://deeplearning.net/software/theano/install.html&#34;&gt;Installing Theano Docs&lt;/a&gt; and now depending on your platform got to the specific instructions and &lt;code&gt;pip install&lt;/code&gt; it.&lt;/p&gt;

&lt;p&gt;Following are my development notes.&lt;/p&gt;

&lt;h3 id=&#34;to-test-that-the-system-has-gpu-capability&#34;&gt;To test that the system has GPU capability&lt;/h3&gt;

&lt;p&gt;My MacBookPro&amp;rsquo;s hardware Intel Iris Graphics 6100 is &lt;a href=&#34;http://stackoverflow.com/questions/32045279/how-can-i-enable-my-macbook-pro-gpu-optimization-for-theano&#34;&gt;apparently not compatible with Theano in GPU mode&lt;/a&gt;. Thus, we are going to switch to a hardware system with NVIDIA graphics.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://deeplearning.net/software/theano_versions/dev/install_macos.html&#34;&gt;Installation macOS&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;../../pages/BabyTheano.html&#34;&gt;Baby Steps&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>